org: lucasbrogni
app: prospects-api
service: prospects-api

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 1024 # optional, in MB, default is 1024
  timeout: 2 # optional, in seconds, default is 6
  provisionedConcurrency: 10
  environment:
    NODE_ENV: dev
    PROSPECT_COLLECTION: prospects
    PROSPECT_STATS_COLLECTIONS: prospectsStats
    DB_NAME: prospects
    DB_URL: mongodb+srv://prospects:any@lucasbrogni.zch9p.mongodb.net
    JWT_SECRET: +QueSecreto
    SECRET_ADM_MAKER: JamalAdams#Prez

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-api-gateway-caching

custom:
  apiGatewayCaching:
    enabled: false

package:
  exclude:
    - config/.env.stg
    - config/.env.pro
    - coverage/**
    - .circleci/**

  include:
    - config/.env.dev

functions:
  create:
    handler: app/handler.create
    events:
      - http:
          path: prospects
          method: post
          authorizer: authorizerFunc 
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
  
  update:
    handler: app/handler.update
    events:
      - http:
          path: prospects/{id}
          method: put
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  find:
    handler: app/handler.find
    events:
      - http:
          path: prospects
          method: get
          caching:
            enabled: false
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
            
  findOne:
    handler: app/handler.findOne
    events:
      - http:
          path: prospects/{id}
          method: get
          caching:
            enabled: false
            cacheKeyParameters:
              - name: request.path.id
                cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  deleteOne:
    handler: app/handler.deleteOne
    events:
      - http:
          path: prospects/{id}
          method: delete
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  disable: 
    handler: app/handler.disable
    events:
      - http:
          path: prospects/{id}/disable
          method: put
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
  
  enable: 
    handler: app/handler.enable
    events:
      - http:
          path: prospects/{id}/enable
          method: put
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  createStatsProspects: 
    handler: app/handler.createStats
    events:
      - http:
          path: prospects/{id}/stats
          method: post
          caching:
            enabled: false
            cacheKeyParameters:
              - name: request.path.id
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  updateStatsProspect: 
    handler: app/handler.updateStats
    events: 
      - http: 
          path: prospects/{id}/stats
          method: put
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  findStatsByProspect: 
    handler: app/handler.findStatsByProspect
    events:
      - http:
          path: prospects/{id}/stats
          method: get
          caching:
            enabled: false
            cacheKeyParameters:
              - name: request.path.id
                cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  compareProspectsByStats: 
    handler: app/handler.compareProspectsByStats
    events:
      - http:
          path: prospects/{id}/relateds
          method: get
          caching:
            enabled: false
            cacheKeyParameters:
              - name: request.path.id
                cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  createProspectCombineInfo: 
    handler: app/handler.createProspectCombineInfo
    events:
      - http:
          path: prospects/{id}/combine
          method: post
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

          
  findCombineDataByProspect: 
    handler: app/handler.findCombineDataByProspect
    events:
      - http:
          path: prospects/{id}/combine
          method: get
          caching:
            enabled: false
            cacheKeyParameters:
              - name: request.path.id
                cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  
  findCombineData: 
    handler: app/handler.findCombineData
    events:
      - http:
          path: prospects/combine
          method: get
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  updateCombineData: 
    handler: app/handler.updateCombineData
    events:
      - http:
          path: prospects/{id}/combine
          method: put
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  
  deleteCombineData: 
    handler: app/handler.deleteCombineData
    events:
      - http:
          path: prospects/{id}/combine
          method: delete
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  createUser: 
    handler: app/handler.createUser
    events:
      - http:
          path: users
          method: post
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  evaluateProspect: 
    handler: app/handler.evaluateProspect
    events:
      - http:
          path: prospects/{id}/evaluations
          method: post
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  findUserProspectEvaluations: 
    handler: app/handler.findUserProspectEvaluations
    events:
      - http:
          path: prospects/{id}/user/evaluations
          method: get
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  
  removeProspectEvaluation: 
    handler: app/handler.removeProspectEvaluation
    events:
      - http:
          path: prospects/{id}/evaluations
          method: delete
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  
  findProspectEvaluations: 
    handler: app/handler.findProspectEvaluations
    events:
      - http:
          path: prospects/{id}/evaluations
          method: get
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  updateProspectEvaluation: 
    handler: app/handler.updateProspectEvaluation
    events:
      - http:
          path: prospects/{id}/evaluations
          method: patch
          authorizer: authorizerFunc
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true


  login: 
    handler: app/handler.login
    events:
      - http:
          path: login
          method: post
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  
  makeUserAdm: 
    handler: app/handler.makeAdm
    events:
      - http:
          path: users/makeAdm
          method: post
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
    
  createUserCriteria: 
    handler: app/handler.createCriteria
    events:
      - http:
          path: users/criteria
          method: post
          cors:
            origin: '*' 
            headers: 
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  authorizerFunc:
    handler: app/handler.authorizerFunc

